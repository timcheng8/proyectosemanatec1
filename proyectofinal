from random import randrange
from turtle import *
from freegames import square, vector

# -------------------------
# CONFIG GLOBALES
# -------------------------
food = vector(0, 0)
snake = [vector(10, 0)]
aim = vector(10, 0)
score = 0
game_mode = None    # 'score', 'time', 'infinite', 'survival'
snake_color = "white"
enemies = []
speed = 120
game_over = False
lose_reason = ""
state = "menu"      # 'menu', 'color', 'game', 'gameover'
buttons = []        # [(x1,y1,x2,y2, action)]

# -------------------------
# UTILIDAD UI
# -------------------------
def set_vintage_style():
    bgcolor("black")
    pencolor("white")

def draw_button(cx, cy, w, h, text, action):
    """Dibuja un botón centrado en (cx,cy) y lo registra para clic."""
    global buttons
    x1, y1 = cx - w/2, cy - h/2
    x2, y2 = cx + w/2, cy + h/2

penup(); goto(x1, y1); pendown()
    color("white")
    for _ in range(2):
        forward(w); left(90); forward(h); left(90)
    penup()
    goto(cx, cy - 8)  # texto centrado aprox.
    write(text, align="center", font=("Courier", 12, "normal"))

    buttons.append((x1, y1, x2, y2, action))

def clear_buttons():
    global buttons
    buttons = []

def handle_click(x, y):
    """Handler global de clics: revisa si tocaste algún botón activo."""
    for (x1, y1, x2, y2, action) in buttons:
        if x1 <= x <= x2 and y1 <= y <= y2:
            action()
            break

# -------------------------
# DIRECCIONES
# -------------------------
def change(x, y):
    global aim
    if state == "game" and not game_over:
        aim.x = x
        aim.y = y

def inside(head):
    return -200 < head.x < 200 and -200 < head.y < 200

# -------------------------
# ENEMIGOS (MODO SURVIVAL)
# -------------------------
def move_enemies():
    for e in enemies:
        if snake[-1].x < e.x: e.x -= 10
        elif snake[-1].x > e.x: e.x += 10
        if snake[-1].y < e.y: e.y -= 10
        elif snake[-1].y > e.y: e.y += 10

# -------------------------
# BORDES
# -------------------------
def draw_border():
    """Dibuja un borde blanco alrededor del tablero."""
    penup()
    goto(-200, -200)
    pendown()
    color("white")
    for _ in range(4):
        forward(400)
        left(90)
    penup()

# -------------------------
# PANTALLAS
# -------------------------
def show_menu():
    global state
    clear(); clear_buttons()
    penup(); color("white")
    goto(0, 130); write("=== SNAKE RETRO ===", align="center", font=("Courier", 18, "bold"))
    goto(0, 95);  write("Elige modo:", align="center", font=("Courier", 14, "normal"))

    # Botones (modo)
    draw_button(0, 60, 360, 28, "Puntaje — clásico infinito", lambda: set_mode("score"))
    draw_button(0, 25, 360, 28, "Contrarreloj — 90s máxima puntuación", lambda: set_mode("time"))
    draw_button(0, -10, 360, 28, "Infinito (Pac-Man) — atraviesa paredes, +velocidad al comer", lambda: set_mode("infinite"))
    draw_button(0, -45, 360, 28, "Survival — enemigos te persiguen", lambda: set_mode("survival"))

    goto(0, -95); write("Haz clic en un modo para continuar", align="center", font=("Courier", 12, "normal"))

    listen(); update()
    onscreenclick(handle_click)
def show_color_menu():
    global state
    clear(); clear_buttons()
    penup(); color("white")
    goto(0, 90); write("Elige color de la serpiente", align="center", font=("Courier", 16, "bold"))

    draw_button(0, 40, 220, 28, "Blanco", lambda: set_color_and_start("white"))
    draw_button(0, 5, 220, 28, "Verde neón", lambda: set_color_and_start("lime"))
    draw_button(0, -30, 220, 28, "Rojo", lambda: set_color_and_start("red"))

    goto(0, -80); write("Haz clic en un color", align="center", font=("Courier", 12, "normal"))

    state = "color"
    listen(); update()
    onscreenclick(handle_click)

def show_restart_screen():
    global state, game_over
    clear(); clear_buttons()
    penup(); color("white")
    goto(0, 60);  write(f"Has perdido: {lose_reason}", align="center", font=("Courier", 14, "normal"))
    goto(0, 30);  write(f"Score final: {score}", align="center", font=("Courier", 14, "normal"))

    draw_button(-60, -20, 100, 30, "   Sí   ", restart_game)
    draw_button( 60, -20, 100, 30, "   No   ", exit_game)

    goto(0, -70); write("Haz clic en un botón (o usa S / N)", align="center", font=("Courier", 12, "normal"))

    state = "gameover"
    game_over = True
    listen(); update()
    onscreenclick(handle_click)

# -------------------------
# ACCIONES DE MENÚ
# -------------------------
def set_mode(mode):
    global game_mode
    game_mode = mode
    show_color_menu()

def set_color_and_start(color):
    global snake_color, state
    snake_color = color
    state = "game"
    clear(); clear_buttons()
    update()
    move() 

# -------------------------
# REINICIO / SALIDA
# -------------------------
def restart_game():
    global food, snake, aim, score, enemies, speed, game_over, state
    if state != "gameover":
        return
    food = vector(0, 0)
    snake = [vector(10, 0)]
    aim = vector(10, 0)
    score = 0
    enemies = []
    speed = 120
    game_over = False
    state = "menu"
    show_menu()

def exit_game():
    if state != "gameover":
        return
    clear(); clear_buttons()
    penup(); goto(0, 0); color("white")
    write("Gracias por jugar", align="center", font=("Courier", 16, "normal"))
    update()
    ontimer(bye, 1500)


