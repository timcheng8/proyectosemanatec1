from random import randrange
from turtle import *
from freegames import square, vector

# -------------------------
# CONFIG GLOBALES
# -------------------------
food = vector(0, 0)
snake = [vector(10, 0)]
aim = vector(10, 0)
score = 0
game_mode = None    # 'score', 'time', 'infinite', 'survival'
snake_color = "white"
enemies = []
speed = 120
game_over = False
lose_reason = ""
state = "menu"      # 'menu', 'color', 'game', 'gameover'
buttons = []        # [(x1,y1,x2,y2, action)]

# -------------------------
# UTILIDAD UI
# -------------------------
def set_vintage_style():
    bgcolor("black")
    pencolor("white")

def draw_button(cx, cy, w, h, text, action):
    """Dibuja un botón centrado en (cx,cy) y lo registra para clic."""
    global buttons
    x1, y1 = cx - w/2, cy - h/2
    x2, y2 = cx + w/2, cy + h/2

penup(); goto(x1, y1); pendown()
    color("white")
    for _ in range(2):
        forward(w); left(90); forward(h); left(90)
    penup()
    goto(cx, cy - 8)  # texto centrado aprox.
    write(text, align="center", font=("Courier", 12, "normal"))

    buttons.append((x1, y1, x2, y2, action))

def clear_buttons():
    global buttons
    buttons = []

def handle_click(x, y):
    """Handler global de clics: revisa si tocaste algún botón activo."""
    for (x1, y1, x2, y2, action) in buttons:
        if x1 <= x <= x2 and y1 <= y <= y2:
            action()
            break

# -------------------------
# DIRECCIONES
# -------------------------
def change(x, y):
    global aim
    if state == "game" and not game_over:
        aim.x = x
        aim.y = y

def inside(head):
    return -200 < head.x < 200 and -200 < head.y < 200

# -------------------------
# ENEMIGOS (MODO SURVIVAL)
# -------------------------
def move_enemies():
    for e in enemies:
        if snake[-1].x < e.x: e.x -= 10
        elif snake[-1].x > e.x: e.x += 10
        if snake[-1].y < e.y: e.y -= 10
        elif snake[-1].y > e.y: e.y += 10

# -------------------------
# BORDES
# -------------------------
def draw_border():
    """Dibuja un borde blanco alrededor del tablero."""
    penup()
    goto(-200, -200)
    pendown()
    color("white")
    for _ in range(4):
        forward(400)
        left(90)
    penup()

# -------------------------
# PANTALLAS
# -------------------------
def show_menu():
    global state
    clear(); clear_buttons()
    penup(); color("white")
    goto(0, 130); write("=== SNAKE RETRO ===", align="center", font=("Courier", 18, "bold"))
    goto(0, 95);  write("Elige modo:", align="center", font=("Courier", 14, "normal"))

    # Botones (modo)
    draw_button(0, 60, 360, 28, "Puntaje — clásico infinito", lambda: set_mode("score"))
    draw_button(0, 25, 360, 28, "Contrarreloj — 90s máxima puntuación", lambda: set_mode("time"))
    draw_button(0, -10, 360, 28, "Infinito (Pac-Man) — atraviesa paredes, +velocidad al comer", lambda: set_mode("infinite"))
    draw_button(0, -45, 360, 28, "Survival — enemigos te persiguen", lambda: set_mode("survival"))

    goto(0, -95); write("Haz clic en un modo para continuar", align="center", font=("Courier", 12, "normal"))

    listen(); update()
    onscreenclick(handle_click)


